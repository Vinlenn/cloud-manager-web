{"remainingRequest":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\babel-loader\\lib\\index.js!D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProject\\cloudStore\\cloud-manage-web\\src\\views\\item\\MyBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\src\\views\\item\\MyBrand.vue","mtime":1614678081490},{"path":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProject\\cloudStore\\cloud-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"my-brand\",\n  data: function data() {\n    return {\n      search: '',\n      //搜索条件\n      totalBrands: 0,\n      // 总条数\n      brands: [],\n      // 当前页品牌数据,目前没有，下面模拟假数据\n      loading: true,\n      // 是否在加载中\n      pagination: {},\n      // 分页信息\n      headers: [// 头信息\n      {\n        text: 'id',\n        align: 'center',\n        value: 'id'\n      }, {\n        text: '名称',\n        align: 'center',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'LOGO',\n        align: 'center',\n        sortable: false,\n        value: 'image'\n      }, {\n        text: '首字母',\n        align: 'center',\n        value: 'letter',\n        sortable: true\n      }, {\n        text: '操作',\n        align: 'center',\n        value: 'button',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      console.log('start request');\n      this.loading = true;\n      this.$http.get(\"/item/brand/list\", {\n        params: {\n          key: this.search,\n          // 搜索条件\n          page: this.pagination.page,\n          // 当前页\n          rows: this.pagination.rowsPerPage,\n          // 每页大小\n          sortBy: this.pagination.sortBy,\n          // 排序字段\n          desc: this.pagination.descending // 是否降序\n\n        }\n      }).then(function (res) {\n        _this.brands = res.data.items;\n        _this.totalBrands = res.data.total;\n      });\n      this.loading = false;\n    }\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  watch: {\n    pagination: {\n      deep: true,\n      handler: function handler() {\n        //变化后的回调函数\n        this.getData();\n      }\n    },\n    search: {\n      handler: function handler() {\n        this.getData();\n      }\n    }\n  }\n};",{"version":3,"sources":["MyBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AACA;AACA,MAAA,WAAA,EAAA,CAFA;AAEA;AACA,MAAA,MAAA,EAAA,EAHA;AAGA;AACA,MAAA,OAAA,EAAA,IAJA;AAIA;AACA,MAAA,UAAA,EAAA,EALA;AAKA;AACA,MAAA,OAAA,EAAA,CAAA;AACA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OALA;AANA,KAAA;AAcA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,kBAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,GAAA,EAAA,KAAA,MADA;AACA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,CAAA,IAFA;AAEA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,CAAA,WAHA;AAGA;AACA,UAAA,MAAA,EAAA,KAAA,UAAA,CAAA,MAJA;AAIA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,CAAA,UALA,CAKA;;AALA;AADA,OAAA,EAQA,IARA,CAQA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,OAXA;AAYA,WAAA,OAAA,GAAA,KAAA;AACA;AAjBA,GAlBA;AAqCA,EAAA,OArCA,qBAqCA;AACA,SAAA,OAAA;AACA,GAvCA;AAwCA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA;AACA,aAAA,OAAA;AACA;AALA,KADA;AAQA,IAAA,MAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA,aAAA,OAAA;AACA;AAHA;AARA;AAxCA,CAAA","sourcesContent":["<template>\r\n    <v-card>\r\n        <v-card-title>\r\n            <v-btn color=\"primary\">新增</v-btn>\r\n            <!--搜索框，与search属性关联-->\r\n            <v-spacer />\r\n            <v-flex xs3>\r\n            <v-text-field label=\"输入关键字搜索\" v-model=\"search\" append-icon=\"search\" hide-details/>\r\n\r\n            </v-flex>\r\n        </v-card-title>\r\n        <v-divider/>\r\n        <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"brands\"\r\n                :pagination.sync=\"pagination\"\r\n                :total-items=\"totalBrands\"\r\n                :loading=\"loading\"\r\n                class=\"elevation-1\"\r\n        >\r\n            <template slot=\"items\" slot-scope=\"props\">\r\n                <td>{{ props.item.id }}</td>\r\n                <td class=\"text-xs-center\">{{props.item.name}}</td>\r\n                <td class=\"text-xs-center\">\r\n                    <img v-if=\"props.item.image\" :sr3\r\n\r\n                         c=\"props.item.image\" width=\"130\" height=\"40\">\r\n                    <span v-else>无</span>\r\n                </td>\r\n                <td class=\"text-xs-center\">{{props.item.letter}}</td>\r\n                <td class=\"justify-center layout\">\r\n                    <v-btn color=\"info\">编辑</v-btn>\r\n                    <v-btn color=\"warning\">删除</v-btn>\r\n                </td>\r\n            </template>\r\n        </v-data-table>\r\n    </v-card>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: \"my-brand\",\r\n        data() {\r\n            return {\r\n                search:'',  //搜索条件\r\n                totalBrands: 0, // 总条数\r\n                brands: [], // 当前页品牌数据,目前没有，下面模拟假数据\r\n                loading: true, // 是否在加载中\r\n                pagination: {}, // 分页信息\r\n                headers: [ // 头信息\r\n                    {text: 'id', align: 'center', value: 'id'},\r\n                    {text: '名称', align: 'center', sortable: false, value: 'name'},\r\n                    {text: 'LOGO', align: 'center', sortable: false, value: 'image'},\r\n                    {text: '首字母', align: 'center', value: 'letter', sortable: true,},\r\n                    {text: '操作', align: 'center', value: 'button', sortable: false}\r\n                ]\r\n            }\r\n        },\r\n        methods: {\r\n            getData() {\r\n                console.log('start request');\r\n                this.loading = true;\r\n                this.$http.get(\"/item/brand/list\",{\r\n                    params:{\r\n                        key: this.search, // 搜索条件\r\n                        page: this.pagination.page,// 当前页\r\n                        rows: this.pagination.rowsPerPage,// 每页大小\r\n                        sortBy: this.pagination.sortBy,// 排序字段\r\n                        desc: this.pagination.descending// 是否降序\r\n                    }\r\n                }).then(res=>{\r\n                    this.brands = res.data.items;\r\n                    this.totalBrands = res.data.total;\r\n                })\r\n                this.loading=false;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getData();\r\n        },\r\n        watch:{\r\n            pagination:{\r\n                deep:true,\r\n                handler(){\r\n                    //变化后的回调函数\r\n                    this.getData();\r\n                }\r\n            },\r\n            search:{\r\n                handler(){\r\n                    this.getData();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</script>"],"sourceRoot":"src/views/item"}]}